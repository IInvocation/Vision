{
	"globalization": {
		"defaultCulture": "en-US",
		"supportedCultures": [ "en-US", "de-DE" ]
	},
	"proxy": {
		"enabled": "false"
	},
	"signing": {
		"currentKeyName": "current.secret.key",
		"expiredKeyNames": []
	},
	"appsettings": {
		"enableCsrf": "true",
		"EncryptionKey": "DUMMY_KEY_PLACE_INTO_SECRETS",
		"HmacKey": "DUMMY_KEY_PLACE_INTO_SECRETS",
		"defaultConnectionString": "Data Source=.\\SQLEXPRESS;Initial Catalog=Vision;Integrated Security=True;Connect Timeout=15;Encrypt=False;TrustServerCertificate=True;ApplicationIntent=ReadWrite;MultiSubnetFailover=False"
	},
	"logging": {
		"useDebug": "false",
		"debugMinimumLevel": "Information",
		"useConsole": "true",
		"consoleMinimumLevel": "Information",
		"useSerilog": "true",
		"serilogMinimumLevel": "Information",
		"outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level}] [{SourceContext:l}] {Message}{NewLine}{Exception}",
		"pathFormat": "LogFile-{Date}.log",
		"fileSizeLimitBytes": "52428800",
		"retainedFileCountLimit": "10",
		"overrides": [ "Microsoft@Information", "System@Warning" ]
	},
	"openIdAuthentication": {
		"externalLoginRoute": "/Account/ExternalLoginCallback"
	},
	"authentication": {
		"autoLockout": "true",
		"autoLockoutMaxRetryCount": "10",
		"autoLockoutTimeSpan": "00:15:00",
		"claimsIssuer": "https://auth.fluitech.de",
		"redirectQuerystringKey": "returnUrl"
	},
	"formsAuthentication": {
		"useOwinAuthentication": "true",
		"loginRoute": "/Account/Login",
		"externalLoginRoute": "/Account/ExternalLoginCallback",
		"logoutRoute": "/Account/Logout",
		"registerRoute": "/Account/Register",
		"manageRoute": "/Account/Manage",
		"loginViewName": "Login",
		"registerViewName": "Register",
		"manageViewName": "Manage",
		"redirectUrl": "/Account/Login"
	},
	"googleAuth": {
		"authenticationScheme": "Google",
		"signInScheme": null,
		"displayName": "Google",
		"redirectUri": "https://auth.fluitech.de/Account/signin-google",
		"clientId": "DUMMY_ID_PLACE_INTO_SECRETS",
		"clientSecret": "DUMMY_SECRET_PLACE_INTO_SECRETS"
	},
	"identity": {
		"baseRoute": "/Identity",
		"indexRoute": "/",
		"indexViewName": "Index"
	}
}
