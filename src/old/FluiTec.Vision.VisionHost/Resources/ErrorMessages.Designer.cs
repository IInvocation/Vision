//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FluiTec.Vision.VisionHost.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ErrorMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorMessages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FluiTec.Vision.VisionHost.Resources.ErrorMessages", typeof(ErrorMessages).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; is not a valid email address. ähnelt.
        /// </summary>
        internal static string email_error {
            get {
                return ResourceManager.GetString("email_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; should be equal to &apos;{ComparisonValue}&apos;. ähnelt.
        /// </summary>
        internal static string equal_error {
            get {
                return ResourceManager.GetString("equal_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; must be {MaxLength} characters in length. You entered {TotalLength} characters. ähnelt.
        /// </summary>
        internal static string exact_length_error {
            get {
                return ResourceManager.GetString("exact_length_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; must be between {From} and {To} (exclusive). You entered {Value}. ähnelt.
        /// </summary>
        internal static string exclusivebetween_error {
            get {
                return ResourceManager.GetString("exclusivebetween_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; must be greater than &apos;{ComparisonValue}&apos;. ähnelt.
        /// </summary>
        internal static string greaterthan_error {
            get {
                return ResourceManager.GetString("greaterthan_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; must be greater than or equal to &apos;{ComparisonValue}&apos;. ähnelt.
        /// </summary>
        internal static string greaterthanorequal_error {
            get {
                return ResourceManager.GetString("greaterthanorequal_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; must be between {From} and {To}. You entered {Value}. ähnelt.
        /// </summary>
        internal static string inclusivebetween_error {
            get {
                return ResourceManager.GetString("inclusivebetween_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; must be between {MinLength} and {MaxLength} characters. You entered {TotalLength} characters. ähnelt.
        /// </summary>
        internal static string length_error {
            get {
                return ResourceManager.GetString("length_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; must be less than &apos;{ComparisonValue}&apos;. ähnelt.
        /// </summary>
        internal static string lessthan_error {
            get {
                return ResourceManager.GetString("lessthan_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; must be less than or equal to &apos;{ComparisonValue}&apos;. ähnelt.
        /// </summary>
        internal static string lessthanorequal_error {
            get {
                return ResourceManager.GetString("lessthanorequal_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; should not be empty. ähnelt.
        /// </summary>
        internal static string notempty_error {
            get {
                return ResourceManager.GetString("notempty_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; should not be equal to &apos;{ComparisonValue}&apos;. ähnelt.
        /// </summary>
        internal static string notequal_error {
            get {
                return ResourceManager.GetString("notequal_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; must not be empty. ähnelt.
        /// </summary>
        internal static string notnull_error {
            get {
                return ResourceManager.GetString("notnull_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The specified condition was not met for &apos;{PropertyName}&apos;. ähnelt.
        /// </summary>
        internal static string predicate_error {
            get {
                return ResourceManager.GetString("predicate_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{PropertyName}&apos; is not in the correct format. ähnelt.
        /// </summary>
        internal static string regex_error {
            get {
                return ResourceManager.GetString("regex_error", resourceCulture);
            }
        }
    }
}
